#!/bin/sh

target="$1"
share_path="${2:-/pub/projects/cbrg-ortholog-benchmark-service}"


usage() {
   echo "Usage: $0 target_user@target_host [remote_share_path]"
}

die_usage() {
   usage
   exit 1
}
[ -n "$target" ] || die_usage

project="benchmark-webservice"

cat | ssh $target "cat | bash" << DONE
MAINHOST=$(dnsdomainname | grep -P "ethz.ch|ucl.ac.uk" >/dev/null)$?

if [ -d ~/$project ]; then
    (cd ~/$project; git pull)
else
    if [[ \$MAINHOST == 0 ]]; then
        git clone git@cbrg-git.ethz.ch:$project
    else
        git clone https://github.com/qfo/${project}.git
    fi
fi

# copy darwin binary and library
if [[ \$MAINHOST == 0 ]]; then
    mkdir -p ~/darwin/DB 
    scp darwin@linneus52.ethz.ch:v2/source/linux64/darwin ~/darwin/darwin
    scp -r darwin@linneus52.ethz.ch:v2/source/lib ~/darwin/
    scp darwin@linneus52.ethz.ch:DB/GOdata.drw.gz ~/darwin/DB/
    scp darwin@linneus52.ethz.ch:DB/speciescode.drw.gz ~/darwin/DB/
else
    wget -O \${HOME}/darwin.tgz http://orthology.benchmark-service.org/darwin.tgz
    (cd \${HOME}; tar xzf darwin.tgz; rm -f darwin.tgz)
fi
sed -i -e "s|datadirname\s*:=.*|datadirname := '\${HOME}/darwin/DB':|" ~/darwin/lib/darwinit

# create script to launch darwin in bin dir
mkdir -p ~/bin
cat > ~/bin/darwin <<EOF
#!/bin/bash
ulimit -s unlimited
exec ~/darwin/darwin -l ~/darwin/lib/ \\\$*
EOF
chmod +x ~/bin/darwin
if [ -h ~/bin/darwin64 ] ; then 
    unlink ~/bin/darwin64
fi
ln -s ~/bin/darwin ~/bin/darwin64

cat > ~/bin/start.$project <<EOX
#!/bin/bash
# source related environment variables
. ~/.bashrc
mkdir -p "/tmp/BS_outpipes"
if [ ! -p \${DARWIN_RUN_PATH}/BSin.\$(hostname) ]; then
    rm -f \${DARWIN_RUN_PATH}/BSin.\$(hostname)
    mkfifo \${DARWIN_RUN_PATH}/BSin.\$(hostname)
fi

debug="false"
if [[ "\\\$1" == "-d" ]] ; then
    debug="true";
fi
exec darwin << EOY
DEBUG := \\\${debug};
ReadProgram( getenv('DARWIN_ORTHOLOG_BENCHMARK_REPO_PATH').'/ServerMain.drw' );
EOY
EOX
chmod +x ~/bin/start.$project


cat > ~/.bashrc << EOA
export DARWIN_ORTHOLOG_BENCHMARK_REPO_PATH=\${HOME}/$project
export DARWIN_LOG_PATH=\${HOME}/log
export DARWIN_RUN_PATH=\${HOME}/run
export DARWIN_ORTHOLOG_BENCHMARKDATA_PATH=${share_path}
export DARWIN_OMA_REPO_PATH=\${HOME}/OMA
echo \\\$PATH | grep -q \$HOME/bin || export PATH="\$HOME/bin:\\\$PATH"
export MAFFT_BINARIES=/usr/lib/mafft/lib/mafft
export GDFONTPATH="/usr/share/fonts/truetype/freefont/"
EOA

# make all directories and symlinks
. ~/.bashrc
DDIR="\${DARWIN_ORTHOLOG_BENCHMARKDATA_PATH}/data/"
mkdir -p \$DDIR
if [ ! -f \${DDIR}/testProperties.drw ] ; then
    echo "TESTPROPERTIES := table(0):" > \${DDIR}/testProperties.drw
fi
if [ ! -f \${DDIR}/projectKeys.drw ] ; then
    echo "PROJECTS := table(0):" > \${DDIR}/projectKeys.drw
fi
mkdir -p \${DARWIN_ORTHOLOG_BENCHMARKDATA_PATH}/{results,sessions,projects,htdocs}
mkdir -p \${DARWIN_ORTHOLOG_BENCHMARKDATA_PATH}/htdocs/resultimgs
mkdir -p \${DARWIN_ORTHOLOG_BENCHMARKDATA_PATH}/htdocs/raw/{RefPhylo,EC,STDTest,GO,TreeTest}
for f in raw resultimgs examples simdata doc ; do 
    ln -s \${DARWIN_ORTHOLOG_BENCHMARKDATA_PATH}/htdocs/\${f} ~/$project/htdocs/\${f}    
done


cat > ~/etc/supervisor.d/$project.conf << EOC
[fcgi-program:fcgiwrap]
command = /usr/sbin/fcgiwrap
numprocs = 2
process_name=%(program_name)s_%(process_num)02d
environment=DARWIN_RUN_PATH='\${HOME}/run',DARWIN_LOG_PATH='\${HOME}/log',DARWIN_ORTHOLOG_BENCHMARKDATA_PATH='\$DARWIN_ORTHOLOG_BENCHMARKDATA_PATH'
socket = unix://\${HOME}/run/fcgiwrap.socket
socket_owner = cbrg-obs:www-data
socket_mode = 0770
stdout_logfile = \${HOME}/log/%(program_name)s.log
stderr_logfile = \${HOME}/log/%(program_name)s.log
redirect_stderr = true

[program:$project]
command = \${HOME}/bin/start.$project
autorestart = true
stdout_logfile = \$HOME/log/%(program_name)s.log
stderr_logfile = \$HOME/log/%(program_name)s.log
redirect_stderr = true
EOC

# retrieve initial data to run benchmarking service on reference proteomes
if [ ! -f \${DARWIN_ORTHOLOG_BENCHMARKDATA_PATH}/reference5/ServerIndexed.db ] ; then
    wget -O \${DARWIN_ORTHOLOG_BENCHMARKDATA_PATH}/init_data.tgz http://orthology.benchmark-service.org/init_data.tgz
    if [[ "$?" -ne "0" ]] ; then
        echo "WARNING: cannot retrieve initial dataset from server."
    else
        (cd \${DARWIN_ORTHOLOG_BENCHMARKDATA_PATH}; tar xzf init_data.tgz; rm -f init_data.tgz)
    fi
fi
./bin/svctl reload
DONE
